buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath 'nu.studer:gradle-jooq-plugin:3.0.2'
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.1.4"
        //classpath "org.postgresql:postgresql:$postgresVersion"
    }
}

plugins {
    // id 'java'
    // id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    // id "org.jetbrains.kotlin.plugin.allopen"
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}
mainClassName = 'io.ktor.server.netty.EngineMain'
shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
dependencies {

    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-metrics:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
//    implementation "org.msgpack:jackson-dataformat-msgpack:$msgpack_version"
    implementation "io.lettuce:lettuce-core:$lettuce_version"
    //FIXME:关闭指令类
    compile "io.ktor:ktor-server-host-common:$ktor_version"

    compileOnly 'io.swagger:swagger-annotations:1.5.20'
    implementation "io.ktor:ktor-client-apache:$ktor_version"
//    implementation "io.ktor:ktor-client-jackson:$ktor_version"

    implementation "io.github.config4k:config4k:0.4.1"

//    implementation "org.jooq:jooq:${jooqVersion}"
//    implementation "com.zaxxer:HikariCP:$hikariVersion"
//    implementation "org.postgresql:postgresql:$postgresVersion"
//    implementation "joda-time:joda-time:2.10.1"

    //implementation 'com.github.excitement-engineer:ktor-graphql:v0.2.1'

    //implementation "com.expedia:graphql-kotlin:$graphKtVersion"
    //implementation "com.graphql-java:graphql-java:$graphJavaVersion"

//    implementation "com.github.pgutkowski:kgraphql:$kgrahVersion"

//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlinx_coroutines_version"

    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"

}


allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    group 'cn.zenliu.ktor.features'
    version '1.0-SNAPSHOT'
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    test {
        useJUnitPlatform()
    }
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
//        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'

//        testRuntime "org.postgresql:postgresql:$postgresVersion"
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
        testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junit_version")


        testImplementation "org.mockito:mockito-core:2.+"
        testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')


    }
    task createPom {
        pom {
            project {
                groupId this.group
                artifactId this.name
                version this.version

            }
        }.writeTo("pom.xml")
    }
    jar {
        dependsOn += createPom
        into("META-INF/maven/$project.group/$project.name") {
            from('pom.xml')
            rename ".*", "pom.xml"
        }
    }
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}
