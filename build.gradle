plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    group 'cn.zenliu.ktor.features'
    version module_version
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    test {
        useJUnitPlatform()
    }
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
//        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'

//        testRuntime "org.postgresql:postgresql:$postgresVersion"
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
        testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junit_version")


        testImplementation "org.mockito:mockito-core:2.+"
        testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')


    }
   /* task createPom {
        pom {
            project {
                groupId this.group
                artifactId this.name
                version this.version

            }
        }.writeTo("$project.buildDir/pom.xml")
    }
    jar {
        dependsOn += createPom
        into("META-INF/maven/$project.group/$project.name") {
            from("$project.buildDir/pom.xml")
            rename ".*", "pom.xml"
        }
    }*/

}
