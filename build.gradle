buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath 'nu.studer:gradle-jooq-plugin:3.0.2'
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.1.4"
        //classpath "org.postgresql:postgresql:$postgresVersion"
    }
}

plugins {
    // id 'java'
    // id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    // id "org.jetbrains.kotlin.plugin.allopen"
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}
mainClassName = 'io.ktor.server.netty.EngineMain'
shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
dependencies {



    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"

}


allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    group 'cn.zenliu.ktor.features'
    version module_version
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.google.com' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    test {
        useJUnitPlatform()
    }
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
//        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'

//        testRuntime "org.postgresql:postgresql:$postgresVersion"
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
        testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junit_version")


        testImplementation "org.mockito:mockito-core:2.+"
        testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')


    }
    task createPom {
        pom {
            project {
                groupId this.group
                artifactId this.name
                version this.version

            }
        }.writeTo("$project.buildDir/pom.xml")
    }
    jar {
        dependsOn += createPom
        into("META-INF/maven/$project.group/$project.name") {
            from("$project.buildDir/pom.xml")
            rename ".*", "pom.xml"
        }
    }
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}
